<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="backups.RoleUrlRelationMapper">
  <resultMap id="BaseResultMap" type="com.qams.domain.RoleUrlRelation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="roleId" jdbcType="INTEGER" property="roleid" />
    <result column="urlId" jdbcType="INTEGER" property="urlid" />
    <result column="auth" jdbcType="INTEGER" property="auth" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="creater" jdbcType="INTEGER" property="creater" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, roleId, urlId, auth, status, creater, createtime, updatetime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_role_url_relation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_role_url_relation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.qams.domain.RoleUrlRelation">
    insert into t_role_url_relation (id, roleId, urlId, 
      auth, status, creater, 
      createtime, updatetime)
    values (#{id,jdbcType=INTEGER}, #{roleid,jdbcType=INTEGER}, #{urlid,jdbcType=INTEGER}, 
      #{auth,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{creater,jdbcType=INTEGER}, 
      #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.qams.domain.RoleUrlRelation">
    insert into t_role_url_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleid != null">
        roleId,
      </if>
      <if test="urlid != null">
        urlId,
      </if>
      <if test="auth != null">
        auth,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="creater != null">
        creater,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="urlid != null">
        #{urlid,jdbcType=INTEGER},
      </if>
      <if test="auth != null">
        #{auth,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        #{creater,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.qams.domain.RoleUrlRelation">
    update t_role_url_relation
    <set>
      <if test="roleid != null">
        roleId = #{roleid,jdbcType=INTEGER},
      </if>
      <if test="urlid != null">
        urlId = #{urlid,jdbcType=INTEGER},
      </if>
      <if test="auth != null">
        auth = #{auth,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="creater != null">
        creater = #{creater,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qams.domain.RoleUrlRelation">
    update t_role_url_relation
    set roleId = #{roleid,jdbcType=INTEGER},
      urlId = #{urlid,jdbcType=INTEGER},
      auth = #{auth,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      creater = #{creater,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>